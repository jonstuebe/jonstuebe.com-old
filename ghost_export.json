{"meta":{"exported_on":1418309647000,"version":"000"},"data":{"posts":[{"id":0,"title":"First Post","slug":"first-post","markdown":"Welcome to the blog. I&#8217;d like to use this blog to talk about my current findings in the web development world. On top of that I would love for it to become a resource that I can use for myself to refer back to with articles, snippets, and tutorials. I plan to write an article or tutorial every week or two concerning front end topics such as jQuery, css3, html5, and backend topics such as node.js, ruby on rails, php frameworks (codeigniter, fuelphp), and oop. I hope you&#8217;ll find it interesting and learn more along with me.","html":"<p>Welcome to the blog. I’d like to use this blog to talk about my current findings in the web development world. On top of that I would love for it to become a resource that I can use for myself to refer back to with articles, snippets, and tutorials. I plan to write an article or tutorial every week or two concerning front end topics such as jQuery, css3, html5, and backend topics such as node.js, ruby on rails, php frameworks (codeigniter, fuelphp), and oop. I hope you’ll find it interesting and learn more along with me.</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1328770800000,"created_by":1,"updated_at":1328770800000,"updated_by":1,"published_at":1328770800000,"published_by":1},{"id":1,"title":"Wordpress and ACF","slug":"wordpress-and-acf","markdown":"In the past when deciding which cms to build sites with I’ve always considered Wordpress to be one of the easiest options. However, a fully custom cms always seemed that much nicer simply because of the ease of editing for the client when all is said and done.<!--more-->\n\nNow with the use of Elliot Condon’s [Advanced Custom Fields](http://www.advancedcustomfields.com) plugin that argument no longer holds any weight. Not only is it dead simple to edit the sites I build with ACF, but I can complete the sites in half the time. The only question I struggle with is: are people willing and ok with their site being built with Wordpress, even if they paid a large sum of money for it?","html":"<p>In the past when deciding which cms to build sites with I’ve always considered Wordpress to be one of the easiest options. However, a fully custom cms always seemed that much nicer simply because of the ease of editing for the client when all is said and done.<!--more--></p>\n\n<p>Now with the use of Elliot Condon’s <a href=\"http://www.advancedcustomfields.com\">Advanced Custom Fields</a> plugin that argument no longer holds any weight. Not only is it dead simple to edit the sites I build with ACF, but I can complete the sites in half the time. The only question I struggle with is: are people willing and ok with their site being built with Wordpress, even if they paid a large sum of money for it?</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1329030000000,"created_by":1,"updated_at":1329030000000,"updated_by":1,"published_at":1329030000000,"published_by":1},{"id":2,"title":"Sentry Social","slug":"sentry-social","markdown":"The guys over at [@cartalyst](http://twitter.com/cartalyst) have been working away for quite some time on [Sentry](http://sentry.cartalyst.com/), and I just noticed this evening that they have released an add-on called [Sentry Social](http://sentry.cartalyst.com/manual/sentry-social.v1.html \"Sentry Social\") which for me will be extremely beneficial and time saving for a number of projects I have coming up.<!--more-->\n\nSimply put it’s a quick and easy way to connect your Sentry driven auth in your [fuelphp](http://fuelphp.com \"fuelphp\") app to any oauth or oauth2 provider such as facebook and twitter giving easy login access to your users. My only question is does Sentry Social allow you to request specific privileges for facebook for example such as offline access?","html":"<p>The guys over at <a href=\"http://twitter.com/cartalyst\">@cartalyst</a> have been working away for quite some time on <a href=\"http://sentry.cartalyst.com/\">Sentry</a>, and I just noticed this evening that they have released an add-on called <a href=\"http://sentry.cartalyst.com/manual/sentry-social.v1.html\" title=\"Sentry Social\">Sentry Social</a> which for me will be extremely beneficial and time saving for a number of projects I have coming up.<!--more--></p>\n\n<p>Simply put it’s a quick and easy way to connect your Sentry driven auth in your <a href=\"http://fuelphp.com\" title=\"fuelphp\">fuelphp</a> app to any oauth or oauth2 provider such as facebook and twitter giving easy login access to your users. My only question is does Sentry Social allow you to request specific privileges for facebook for example such as offline access?</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1329375600000,"created_by":1,"updated_at":1329375600000,"updated_by":1,"published_at":1329375600000,"published_by":1},{"id":3,"title":"Backbone.js & FuelPHP","slug":"backbone-js-fuelphp","markdown":"Recently I’ve started working with [Backbone.js](http://backbonejs.org/) and started to integrate it into [FuelPHP](http://fuelphp.com/), my current framework of choice. Backbone’s sync feature uses a restful set of ajax requests to hook up the javascript mvc to the backend of your choice. In the case of FuelPHP, I had some issues since Fuel’s Validation class uses the POST variables by default, and Backbone sends over all of the variables in a JSON string.<!--more--> To combat this, I’m using the Hybrid Controller with no custom routes. Pretty awesome really. Here’s the start of the controller:\n\n{% highlight php linenos %}\nclass Controller_Todos extends Controller_Hybrid \n{\n\n\tpublic function action_index()\n\t{\n\t\t$data['todos'] = Model_Todo::find('all');\n\t\t$this->template->title = \"Todos\";\n\t\t$this->template->content = View::forge('todos/index', $data);\t\n\t}\n\n\tpublic function get_index()\n\t{\n\t\tif(Input::get('id'))\n\t\t{\n\t\t\t$id = Input::get('id');\n\t\t\t$todo = Model_Todo::find($id);\n\t\t\t$this->response($todo);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$todos = Model_Todo::find('all');\n\t\t\t$this->response($todos);\n\t\t}\n\t}\n\n\tpublic function post_index()\n\t{\n\t\t$val = Model_Todo::validate('create');\n\t\t\n\t\tif ($val->run(Input::json()))\n\t\t{\n\t\t\t$todo = Model_Todo::forge(array(\n\t\t\t\t'title' => Input::json('title'),\n\t\t\t\t'description' => Input::json('description'),\n\t\t\t\t'completed' => Input::json('completed'),\n\t\t\t));\n\n\t\t\tif ($todo and $todo->save())\n\t\t\t{\n\t\t\t\t$this->response($todo);\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->response(array(\n\t\t\t\t\t'error' => true,\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}{% endhighlight %}\n","html":"<p>Recently I’ve started working with <a href=\"http://backbonejs.org/\">Backbone.js</a> and started to integrate it into <a href=\"http://fuelphp.com/\">FuelPHP</a>, my current framework of choice. Backbone’s sync feature uses a restful set of ajax requests to hook up the javascript mvc to the backend of your choice. In the case of FuelPHP, I had some issues since Fuel’s Validation class uses the POST variables by default, and Backbone sends over all of the variables in a JSON string.<!--more--> To combat this, I’m using the Hybrid Controller with no custom routes. Pretty awesome really. Here’s the start of the controller:</p>\n\n<p>{% highlight php linenos %}\nclass Controller_Todos extends Controller_Hybrid \n{</p>\n\n<pre><code>public function action_index()\n{\n\t$data['todos'] = Model_Todo::find('all');\n\t$this-&gt;template-&gt;title = \"Todos\";\n\t$this-&gt;template-&gt;content = View::forge('todos/index', $data);\t\n}\n\npublic function get_index()\n{\n\tif(Input::get('id'))\n\t{\n\t\t$id = Input::get('id');\n\t\t$todo = Model_Todo::find($id);\n\t\t$this-&gt;response($todo);\n\t}\n\telse\n\t{\n\t\t$todos = Model_Todo::find('all');\n\t\t$this-&gt;response($todos);\n\t}\n}\n\npublic function post_index()\n{\n\t$val = Model_Todo::validate('create');\n\t\n\tif ($val-&gt;run(Input::json()))\n\t{\n\t\t$todo = Model_Todo::forge(array(\n\t\t\t'title' =&gt; Input::json('title'),\n\t\t\t'description' =&gt; Input::json('description'),\n\t\t\t'completed' =&gt; Input::json('completed'),\n\t\t));\n\n\t\tif ($todo and $todo-&gt;save())\n\t\t{\n\t\t\t$this-&gt;response($todo);\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\t$this-&gt;response(array(\n\t\t\t\t'error' =&gt; true,\n\t\t\t));\n\t\t}\n\t}\n}{% endhighlight %}\n</code></pre>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1338274800000,"created_by":1,"updated_at":1338274800000,"updated_by":1,"published_at":1338274800000,"published_by":1},{"id":4,"title":"Recent hacks and Two-Factor Authentication","slug":"recent-hacks-and-two-factor-authentication","markdown":"Recently it seems that all you hear about is another site getting hacked and hundreds of thousands of users information beings compromised. To most it probably seems as if there is no repercussion to this. However, I’ve noticed more and more people who I know practice good or even excellent password practices have had their logins compromised on other non-hacked sites such as facebook and twitter. Is this a coincidence? I think not. I don’t think the solution is simply to create new passwords or create a complex email reset backup plan. It’s simply to target the accounts with the highest amount of information (I would say facebook and your email), and turn on two factor authentication. For those of you that don’t know, two-factor authentication means that when you login, the site will require “something you know” as in your normal password, and “something you have”, like a keycode you receive via cell. Now I want to say first that when I first heard the idea of it, I simply decided it wasn’t for me as I thought that it meant that I needed to have my cellphone by my side every time I logged into my account. This simply isn’t the case as both facebook and gmail allow you authorize a computer thus only making you have to get that keycode via your cell once a month making your experience almost identical to those in the past. All I can say is, I’m so tired of seeing people’s accounts on facebook getting hacked and it’s time for people to make the easy and secure switch to two-factor authentication. It’s there, use it.","html":"<p>Recently it seems that all you hear about is another site getting hacked and hundreds of thousands of users information beings compromised. To most it probably seems as if there is no repercussion to this. However, I’ve noticed more and more people who I know practice good or even excellent password practices have had their logins compromised on other non-hacked sites such as facebook and twitter. Is this a coincidence? I think not. I don’t think the solution is simply to create new passwords or create a complex email reset backup plan. It’s simply to target the accounts with the highest amount of information (I would say facebook and your email), and turn on two factor authentication. For those of you that don’t know, two-factor authentication means that when you login, the site will require “something you know” as in your normal password, and “something you have”, like a keycode you receive via cell. Now I want to say first that when I first heard the idea of it, I simply decided it wasn’t for me as I thought that it meant that I needed to have my cellphone by my side every time I logged into my account. This simply isn’t the case as both facebook and gmail allow you authorize a computer thus only making you have to get that keycode via your cell once a month making your experience almost identical to those in the past. All I can say is, I’m so tired of seeing people’s accounts on facebook getting hacked and it’s time for people to make the easy and secure switch to two-factor authentication. It’s there, use it.</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1345878000000,"created_by":1,"updated_at":1345878000000,"updated_by":1,"published_at":1345878000000,"published_by":1},{"id":5,"title":"Alfred and Audio","slug":"alfred-audio","markdown":"From time to time I like to switch between my headphones and my speakers which are plugged into my iMac at all times. To do this I bought a little external usb audio interface from Griffin called iMic. Once I got this I realized all I have to do is just hold down alt and click on the audio icon in my menu bar to quickly switch between the two. To speed things up and allow me to do it with a few quick keyboard strokes I put this little combo together.<!--more-->\n\nFirst, download and copy [SwitchAudioSource](http://code.google.com/p/switchaudio-osx/downloads/detail?name=SwitchAudioSource-v1.0.zip&amp;can=2&amp;q=) to your ‘/usr/bin’ folder on your mac. Second download and install [this extension](http://jonstuebe.com/wp/wp-content/uploads/2012/10/audio_output_select.zip) for Alfred. Once that’s done, just open up Alfred and use the keyword “output” to switch between inputs. To modify this to fit your various needs just pop open Alfred and modify the keywords in the if statement in extension window. If you’re not sure what your outputs are being labeled as, just run ‘SwitchAudioSource -a’ in your terminal to find out.\n\ncell once a month making your experience almost identical to those in the past. All I can say is, I’m so tired of seeing people’s accounts on facebook getting hacked and it’s time for people to make the easy and secure switch to two-factor authentication. It’s there, use it.</p>","html":"<p>From time to time I like to switch between my headphones and my speakers which are plugged into my iMac at all times. To do this I bought a little external usb audio interface from Griffin called iMic. Once I got this I realized all I have to do is just hold down alt and click on the audio icon in my menu bar to quickly switch between the two. To speed things up and allow me to do it with a few quick keyboard strokes I put this little combo together.<!--more--></p>\n\n<p>First, download and copy <a href=\"http://code.google.com/p/switchaudio-osx/downloads/detail?name=SwitchAudioSource-v1.0.zip&amp;can=2&amp;q=\">SwitchAudioSource</a> to your ‘/usr/bin’ folder on your mac. Second download and install <a href=\"http://jonstuebe.com/wp/wp-content/uploads/2012/10/audio_output_select.zip\">this extension</a> for Alfred. Once that’s done, just open up Alfred and use the keyword “output” to switch between inputs. To modify this to fit your various needs just pop open Alfred and modify the keywords in the if statement in extension window. If you’re not sure what your outputs are being labeled as, just run ‘SwitchAudioSource -a’ in your terminal to find out.</p>\n\n<p>cell once a month making your experience almost identical to those in the past. All I can say is, I’m so tired of seeing people’s accounts on facebook getting hacked and it’s time for people to make the easy and secure switch to two-factor authentication. It’s there, use it.&lt;/p&gt;</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1349247600000,"created_by":1,"updated_at":1349247600000,"updated_by":1,"published_at":1349247600000,"published_by":1},{"id":6,"title":"Compass, Codekit & Other Gems","slug":"compass-codekit-other-gems","markdown":"Today I was working on a project with CodeKit and Compass and trying to use an external gem that automatically [creates rgba equivalent png’s on the fly](https://github.com/aaronrussell/compass-rgbapng). However, I kept getting an error back from the CodeKit compiler. <!--more-->I finally realized all one has to do is simply make sure you have your own copy of sass and compass installed on your system and then go into the CodeKit settings and select for both Compass and Sass to use an external compiler.","html":"<p>Today I was working on a project with CodeKit and Compass and trying to use an external gem that automatically <a href=\"https://github.com/aaronrussell/compass-rgbapng\">creates rgba equivalent png’s on the fly</a>. However, I kept getting an error back from the CodeKit compiler. <!--more-->I finally realized all one has to do is simply make sure you have your own copy of sass and compass installed on your system and then go into the CodeKit settings and select for both Compass and Sass to use an external compiler.</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1349766000000,"created_by":1,"updated_at":1349766000000,"updated_by":1,"published_at":1349766000000,"published_by":1},{"id":7,"title":"Responsive 960 Grid","slug":"responsive-960-grid","markdown":"[Responsive 960 Grid](https://github.com/davatron5000/Foldy960)<div class=\"link_description\"><p>Pretty awesome responsive grid for kickstarting projects from [Dave Rupert](http://twitter.com/davatron5000) over at [Paravel](http://paravelinc.com/)\n</div></p>","html":"<p><a href=\"https://github.com/davatron5000/Foldy960\">Responsive 960 Grid</a>&lt;div class=\"link_description\"&gt;&lt;p&gt;Pretty awesome responsive grid for kickstarting projects from <a href=\"http://twitter.com/davatron5000\">Dave Rupert</a> over at <a href=\"http://paravelinc.com/\">Paravel</a>\n&lt;/div&gt;&lt;/p&gt;</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1355036400000,"created_by":1,"updated_at":1355036400000,"updated_by":1,"published_at":1355036400000,"published_by":1},{"id":8,"title":"How to Setup Twitter Cards","slug":"twitter-cards","markdown":"[How to Setup Twitter Cards](http://davidwalsh.name/twitter-cards)<div class=\"link_description\"><p>[David Walsh](http://twitter.com/davidwalsh) tells how to easily and quickly create twitter cards and use them for your blog or site.\n</div>\n</p>","html":"<p><a href=\"http://davidwalsh.name/twitter-cards\">How to Setup Twitter Cards</a>&lt;div class=\"link_description\"&gt;&lt;p&gt;<a href=\"http://twitter.com/davidwalsh\">David Walsh</a> tells how to easily and quickly create twitter cards and use them for your blog or site.\n&lt;/div&gt;\n&lt;/p&gt;</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1355122800000,"created_by":1,"updated_at":1355122800000,"updated_by":1,"published_at":1355122800000,"published_by":1},{"id":9,"title":"Fixing Wordpress Upload Permissions","slug":"fixing-wordpress-upload-permissions","markdown":"[Fixing Wordpress Upload Permissions](http://www.chrisabernethy.com/why-wordpress-asks-connection-info/)","html":"<p><a href=\"http://www.chrisabernethy.com/why-wordpress-asks-connection-info/\">Fixing Wordpress Upload Permissions</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1355382000000,"created_by":1,"updated_at":1355382000000,"updated_by":1,"published_at":1355382000000,"published_by":1},{"id":10,"title":"Placeholder Overflow","slug":"placeholder-overflow","markdown":"[Placeholder Overflow](http://davidwalsh.name/placeholder-overflow)","html":"<p><a href=\"http://davidwalsh.name/placeholder-overflow\">Placeholder Overflow</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1355468400000,"created_by":1,"updated_at":1355468400000,"updated_by":1,"published_at":1355468400000,"published_by":1},{"id":11,"title":"Rspec & Capybara","slug":"rspec-capybara","markdown":"Encountered a weird bug today. When I tried using the method visit (from capybara) I got an error telling me it did not exist. The solution was changing two lines in the spec_helper.rb. The first was requiring capybara explicitly:\n\n{% highlight ruby %}require 'capybara/rspec'{% endhighlight %}\n\nThe second change was adding this line to the config block:\n\n{% highlight ruby %}config.include Capybara::DSL{% endhighlight %}","html":"<p>Encountered a weird bug today. When I tried using the method visit (from capybara) I got an error telling me it did not exist. The solution was changing two lines in the spec_helper.rb. The first was requiring capybara explicitly:</p>\n\n<p>{% highlight ruby %}require ‘capybara/rspec’{% endhighlight %}</p>\n\n<p>The second change was adding this line to the config block:</p>\n\n<p>{% highlight ruby %}config.include Capybara::DSL{% endhighlight %}</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1358233200000,"created_by":1,"updated_at":1358233200000,"updated_by":1,"published_at":1358233200000,"published_by":1},{"id":12,"title":"Custom Pinterest Button","slug":"custom-pinterest-button","markdown":"Had a project recently that called for some custom sharing buttons and discovered you could do custom [pin it buttons](http://ajtroxell.com/articles/pinterest-and-google-plus-share-links-without-javascript/). Had no idea.","html":"<p>Had a project recently that called for some custom sharing buttons and discovered you could do custom <a href=\"http://ajtroxell.com/articles/pinterest-and-google-plus-share-links-without-javascript/\">pin it buttons</a>. Had no idea.</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1358319600000,"created_by":1,"updated_at":1358319600000,"updated_by":1,"published_at":1358319600000,"published_by":1},{"id":13,"title":"lemonstand & font-face","slug":"lemonstand-font-face","markdown":"Just ran into a weird bug with lemonstand where it was giving me a 404 error when using any @font-face fonts. Did a quick lookup and found out that they allow files conditionally in the htaccess file:\n\nBefore:\n\n{% highlight apache %}RewriteCond %{REQUEST_URI} !(\\.(mov|ico|js|jpg|gif|css|png|swf|txt|xml|xls)$){% endhighlight %}\n\nAfter:\n\n{% highlight apache %}RewriteCond %{REQUEST_URI} !(\\.(mov|ico|js|jpg|gif|css|png|swf|txt|xml|xls|eot|woff|ttf|svg|svgz)$){% endhighlight %}","html":"<p>Just ran into a weird bug with lemonstand where it was giving me a 404 error when using any @font-face fonts. Did a quick lookup and found out that they allow files conditionally in the htaccess file:</p>\n\n<p>Before:</p>\n\n<table>\n  <tbody>\n    <tr>\n      <td>{% highlight apache %}RewriteCond %{REQUEST_URI} !(.(mov</td>\n      <td>ico</td>\n      <td>js</td>\n      <td>jpg</td>\n      <td>gif</td>\n      <td>css</td>\n      <td>png</td>\n      <td>swf</td>\n      <td>txt</td>\n      <td>xml</td>\n      <td>xls)$){% endhighlight %}</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>After:</p>\n\n<table>\n  <tbody>\n    <tr>\n      <td>{% highlight apache %}RewriteCond %{REQUEST_URI} !(.(mov</td>\n      <td>ico</td>\n      <td>js</td>\n      <td>jpg</td>\n      <td>gif</td>\n      <td>css</td>\n      <td>png</td>\n      <td>swf</td>\n      <td>txt</td>\n      <td>xml</td>\n      <td>xls</td>\n      <td>eot</td>\n      <td>woff</td>\n      <td>ttf</td>\n      <td>svg</td>\n      <td>svgz)$){% endhighlight %}</td>\n    </tr>\n  </tbody>\n</table>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1358319600000,"created_by":1,"updated_at":1358319600000,"updated_by":1,"published_at":1358319600000,"published_by":1},{"id":14,"title":"ie8 trim support","slug":"ie8-trim-support","markdown":"Not sure how I didn't know this, but I stumbled upon the fact today that the trim function is not supported in ie8. Here's a quick fix for it:\n\n{% highlight js %}if(typeof String.prototype.trim !== 'function') {\n   String.prototype.trim = function() {\n      return this.replace(/^\\s+|\\s+$/g, '');\n   }\n}{% endhighlight %}","html":"<p>Not sure how I didn’t know this, but I stumbled upon the fact today that the trim function is not supported in ie8. Here’s a quick fix for it:</p>\n\n<p>{% highlight js %}if(typeof String.prototype.trim !== ‘function’) {\n   String.prototype.trim = function() {\n      return this.replace(/^\\s+|\\s+$/g, ‘’);\n   }\n}{% endhighlight %}</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1359097200000,"created_by":1,"updated_at":1359097200000,"updated_by":1,"published_at":1359097200000,"published_by":1},{"id":15,"title":"Design Styles","slug":"design-styles","markdown":"I've seen a lot of articles as of late that have been arguing about design trends. Skeuomorphism, Flat, or as [@sachagreif](http://twitter.com/sachagreif) termed google's current style, skeuominimalism. However my issue with all of this talk is so many people think that a specific style can leave your ui without varying level's of importance to the end user. I don't believe this to be the case. Any design style can create promote ui elements or in the end make them recognizable to the user. If this isn't being done, then it's the designer's fault, not the style.","html":"<p>I’ve seen a lot of articles as of late that have been arguing about design trends. Skeuomorphism, Flat, or as <a href=\"http://twitter.com/sachagreif\">@sachagreif</a> termed google’s current style, skeuominimalism. However my issue with all of this talk is so many people think that a specific style can leave your ui without varying level’s of importance to the end user. I don’t believe this to be the case. Any design style can create promote ui elements or in the end make them recognizable to the user. If this isn’t being done, then it’s the designer’s fault, not the style.</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1360652400000,"created_by":1,"updated_at":1360652400000,"updated_by":1,"published_at":1360652400000,"published_by":1},{"id":16,"title":"Rdio Add Multiple Songs to Playlist","slug":"rdio-add-multiple-songs-to-playlist","markdown":"I was bothered by not having the option to add multiple songs to a playlist so I wrote this little script. It's still a little buggy, but essentially before selecting any songs click on the bookmarklet and then select each song by clicking on any area inside of the song list that isn't already clickable. This should light up the song row and a new button \"Add to Playlist\" should appear. The rest is self explanatory. At some point I will turn this into a full fledge chrome extension with other features that I feel have been missing.\n\n[https://gist.github.com/jonstuebe/5114639](https://gist.github.com/jonstuebe/5114639)","html":"<p>I was bothered by not having the option to add multiple songs to a playlist so I wrote this little script. It’s still a little buggy, but essentially before selecting any songs click on the bookmarklet and then select each song by clicking on any area inside of the song list that isn’t already clickable. This should light up the song row and a new button “Add to Playlist” should appear. The rest is self explanatory. At some point I will turn this into a full fledge chrome extension with other features that I feel have been missing.</p>\n\n<p><a href=\"https://gist.github.com/jonstuebe/5114639\">https://gist.github.com/jonstuebe/5114639</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1362639600000,"created_by":1,"updated_at":1362639600000,"updated_by":1,"published_at":1362639600000,"published_by":1},{"id":17,"title":"laravel four & mamp","slug":"laravel-four-mamp","markdown":"For anyone out there building sites using [L4](http://four.laravel.com/) and MAMP on OSX know that when you use composer through command line you aren't using the php that MAMP run's but rather your systems. To update the path to MAMP's php add the following to your bash profile:\n\n{% highlight bash %}export PATH=/Applications/MAMP/Library/bin/:/Applications/MAMP/bin/php5/bin/:/opt/local/bin:/opt/local/sbin:$PATH{% endhighlight %}","html":"<p>For anyone out there building sites using <a href=\"http://four.laravel.com/\">L4</a> and MAMP on OSX know that when you use composer through command line you aren’t using the php that MAMP run’s but rather your systems. To update the path to MAMP’s php add the following to your bash profile:</p>\n\n<p>{% highlight bash %}export PATH=/Applications/MAMP/Library/bin/:/Applications/MAMP/bin/php5/bin/:/opt/local/bin:/opt/local/sbin:$PATH{% endhighlight %}</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1364194800000,"created_by":1,"updated_at":1364194800000,"updated_by":1,"published_at":1364194800000,"published_by":1},{"id":18,"title":"csscss","slug":"csscss","markdown":"Great tool for finding and reducing duplication in your css code. Quick tip: if you want to save output to a file:\n\n{% highlight bash %}csscss path/to/style.css > saveto.txt{% endhighlight %}\n\n[Original Article](http://zmoazeni.github.io/csscss/)","html":"<p>Great tool for finding and reducing duplication in your css code. Quick tip: if you want to save output to a file:</p>\n\n<p>{% highlight bash %}csscss path/to/style.css &gt; saveto.txt{% endhighlight %}</p>\n\n<p><a href=\"http://zmoazeni.github.io/csscss/\">Original Article</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365663600000,"created_by":1,"updated_at":1365663600000,"updated_by":1,"published_at":1365663600000,"published_by":1},{"id":19,"title":"sass & parent selection","slug":"sass-parent-selection","markdown":"Can't believe that I just now found this, but this extremely changes the way I will write sass from now forward.\n\n[Original Article](http://thesassway.com/intermediate/referencing-parent-selectors-using-ampersand)","html":"<p>Can’t believe that I just now found this, but this extremely changes the way I will write sass from now forward.</p>\n\n<p><a href=\"http://thesassway.com/intermediate/referencing-parent-selectors-using-ampersand\">Original Article</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365663600000,"created_by":1,"updated_at":1365663600000,"updated_by":1,"published_at":1365663600000,"published_by":1},{"id":20,"title":"oocss, sass, and the placeholder","slug":"oocss-sass-and-the-placeholder","markdown":"Just stumbled upon this gem of an article that shows how to use placeholders to keep your CSS dry and still write from an oocss angle. Normally, when I've used @extend in the past with sass I've always looked down on it because it outputs the css in the markup where as @mixin does not. However, you usually get a lot of duplicate code with @mixin. By using a placeholder it essentially acts like @extend but only outputs the code if it is extended.\n\n{% highlight css %}%extrap {\n  padding-left: 5px;\n}\n\n.first-column {\n  @extend %extrap;\n}\n\nul li:first {\n  @extend %extrap;\n}{% endhighlight %}\n\n<p>This would compile to \n\n{% highlight css %}.first-column, ul:first {\n  padding-left: 5px;\n}{% endhighlight %}\n\n[Original Article](http://ianstormtaylor.com/oocss-plus-sass-is-the-best-way-to-css/)","html":"<p>Just stumbled upon this gem of an article that shows how to use placeholders to keep your CSS dry and still write from an oocss angle. Normally, when I’ve used @extend in the past with sass I’ve always looked down on it because it outputs the css in the markup where as @mixin does not. However, you usually get a lot of duplicate code with @mixin. By using a placeholder it essentially acts like @extend but only outputs the code if it is extended.</p>\n\n<p>{% highlight css %}%extrap {\n  padding-left: 5px;\n}</p>\n\n<p>.first-column {\n  @extend %extrap;\n}</p>\n\n<p>ul li:first {\n  @extend %extrap;\n}{% endhighlight %}</p>\n\n<p>This would compile to \n\n{% highlight css %}.first-column, ul:first {\n  padding-left: 5px;\n}{% endhighlight %}\n\n[Original Article](http://ianstormtaylor.com/oocss-plus-sass-is-the-best-way-to-css/)\n</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365750000000,"created_by":1,"updated_at":1365750000000,"updated_by":1,"published_at":1365750000000,"published_by":1},{"id":21,"title":"Media Queries","slug":"media-queries","markdown":"Great post on media queries with tons of examples for every ios device you can think of. At some point I need to convert these to sass mixins.\n\n[http://stephen.io/mediaqueries/](http://stephen.io/mediaqueries/)","html":"<p>Great post on media queries with tons of examples for every ios device you can think of. At some point I need to convert these to sass mixins.</p>\n\n<p><a href=\"http://stephen.io/mediaqueries/\">http://stephen.io/mediaqueries/</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367910000000,"created_by":1,"updated_at":1367910000000,"updated_by":1,"published_at":1367910000000,"published_by":1},{"id":22,"title":"$PATH on Mountain Lion","slug":"path-on-mountain-lion","markdown":"Nice and simple article showing an alternative way of adding directories to your path.\n\n[Adding To The Path on Mountain Lion](http://architectryan.com/2012/10/02/add-to-the-path-on-mac-os-x-mountain-lion/#.UmMwWpTXSlo)","html":"<p>Nice and simple article showing an alternative way of adding directories to your path.</p>\n\n<p><a href=\"http://architectryan.com/2012/10/02/add-to-the-path-on-mac-os-x-mountain-lion/#.UmMwWpTXSlo\">Adding To The Path on Mountain Lion</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1382166000000,"created_by":1,"updated_at":1382166000000,"updated_by":1,"published_at":1382166000000,"published_by":1},{"id":23,"title":"Quickly Setting up Public Keys","slug":"quickly-setting-up-public-keys","markdown":"I found this link today which has a useful little bash code to transfer over the public key via ssh without copying and pasting manually.\n\n<a href=\"http://www.petefreitag.com/item/532.cfm\" target=\"_blank\">Site Link</a>\n","html":"<p>I found this link today which has a useful little bash code to transfer over the public key via ssh without copying and pasting manually.</p>\n\n<p><a href=\"http://www.petefreitag.com/item/532.cfm\" target=\"_blank\">Site Link</a></p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1382425200000,"created_by":1,"updated_at":1382425200000,"updated_by":1,"published_at":1382425200000,"published_by":1},{"id":24,"title":"Reading Progress","slug":"reading-progress","markdown":"I was inspired by a few posts I've seen around, namely [this one](http://css-tricks.com/reading-position-indicator/) over at [css-tricks](http://css-tricks.com) discussing and showcasing some cool examples relating to showing progress on page as you scroll through it. I thought it would be useful to also integrate in a label that keeps track of your progress and gives you an estimated reading time left (similar to [medium.com](medium.com)) but with a live update as your scroll.\n\n\n<p data-height=\"650\" data-theme-id=\"6137\" data-slug-hash=\"KrIex\" data-default-tab=\"result\" class='codepen'></p>\n<script async src=\"//codepen.io/assets/embed/ei.js\"></script>\n\nI've gone ahead and created a jQuery plugin and released it on bower & github as well.\n\n[Github Link](https://github.com/jonstuebe/readingTime)\n\n{% highlight bash %}bower install readingTime{% endhighlight %}","html":"<p>I was inspired by a few posts I’ve seen around, namely <a href=\"http://css-tricks.com/reading-position-indicator/\">this one</a> over at <a href=\"http://css-tricks.com\">css-tricks</a> discussing and showcasing some cool examples relating to showing progress on page as you scroll through it. I thought it would be useful to also integrate in a label that keeps track of your progress and gives you an estimated reading time left (similar to <a href=\"medium.com\">medium.com</a>) but with a live update as your scroll.</p>\n\n<p data-height=\"650\" data-theme-id=\"6137\" data-slug-hash=\"KrIex\" data-default-tab=\"result\" class=\"codepen\"></p>\n<script async=\"\" src=\"//codepen.io/assets/embed/ei.js\"></script>\n\n<p>I’ve gone ahead and created a jQuery plugin and released it on bower &amp; github as well.</p>\n\n<p><a href=\"https://github.com/jonstuebe/readingTime\">Github Link</a></p>\n\n<p>{% highlight bash %}bower install readingTime{% endhighlight %}</p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1399964400000,"created_by":1,"updated_at":1399964400000,"updated_by":1,"published_at":1399964400000,"published_by":1}],"tags":[{"id":0,"name":"ssh","slug":"ssh","description":""},{"id":1,"name":"public keys","slug":"public keys","description":""},{"id":2,"name":"css","slug":"css","description":""},{"id":3,"name":"media-queries","slug":"media-queries","description":""},{"id":4,"name":"oocss","slug":"oocss","description":""},{"id":5,"name":"sass","slug":"sass","description":""},{"id":6,"name":"scss","slug":"scss","description":""},{"id":7,"name":"csscss","slug":"csscss","description":""},{"id":8,"name":"tools","slug":"tools","description":""},{"id":9,"name":"composer","slug":"composer","description":""},{"id":10,"name":"l4","slug":"l4","description":""},{"id":11,"name":"laravel","slug":"laravel","description":""},{"id":12,"name":"php","slug":"php","description":""},{"id":13,"name":"design","slug":"design","description":""},{"id":14,"name":"trends","slug":"trends","description":""},{"id":15,"name":"htaccess","slug":"htaccess","description":""},{"id":16,"name":"lemonstand","slug":"lemonstand","description":""},{"id":17,"name":"html","slug":"html","description":""},{"id":18,"name":"pinterest","slug":"pinterest","description":""},{"id":19,"name":"codekit","slug":"codekit","description":""},{"id":20,"name":"compass","slug":"compass","description":""},{"id":21,"name":"mac","slug":"mac","description":""},{"id":22,"name":"alfred","slug":"alfred","description":""},{"id":23,"name":"rant","slug":"rant","description":""},{"id":24,"name":"backbone.js","slug":"backbone.js","description":""},{"id":25,"name":"fuelphp","slug":"fuelphp","description":""},{"id":26,"name":"oauth","slug":"oauth","description":""},{"id":27,"name":"sentry","slug":"sentry","description":""},{"id":28,"name":"advanced custom fields","slug":"advanced custom fields","description":""},{"id":29,"name":"wordpress","slug":"wordpress","description":""}],"posts_tags":[{"id":1,"post_id":1,"tag_id":28},{"id":2,"post_id":1,"tag_id":29},{"id":3,"post_id":2,"tag_id":25},{"id":4,"post_id":2,"tag_id":26},{"id":5,"post_id":2,"tag_id":27},{"id":6,"post_id":3,"tag_id":24},{"id":7,"post_id":3,"tag_id":25},{"id":8,"post_id":4,"tag_id":23},{"id":9,"post_id":5,"tag_id":22},{"id":10,"post_id":5,"tag_id":21},{"id":11,"post_id":6,"tag_id":19},{"id":12,"post_id":6,"tag_id":20},{"id":13,"post_id":6,"tag_id":2},{"id":14,"post_id":6,"tag_id":21},{"id":15,"post_id":6,"tag_id":5},{"id":16,"post_id":12,"tag_id":2},{"id":17,"post_id":12,"tag_id":17},{"id":18,"post_id":12,"tag_id":18},{"id":19,"post_id":13,"tag_id":15},{"id":20,"post_id":13,"tag_id":16},{"id":21,"post_id":15,"tag_id":13},{"id":22,"post_id":15,"tag_id":14},{"id":23,"post_id":17,"tag_id":9},{"id":24,"post_id":17,"tag_id":10},{"id":25,"post_id":17,"tag_id":11},{"id":26,"post_id":17,"tag_id":12},{"id":27,"post_id":18,"tag_id":2},{"id":28,"post_id":18,"tag_id":7},{"id":29,"post_id":18,"tag_id":5},{"id":30,"post_id":18,"tag_id":6},{"id":31,"post_id":18,"tag_id":8},{"id":32,"post_id":19,"tag_id":2},{"id":33,"post_id":19,"tag_id":5},{"id":34,"post_id":19,"tag_id":6},{"id":35,"post_id":20,"tag_id":2},{"id":36,"post_id":20,"tag_id":4},{"id":37,"post_id":20,"tag_id":5},{"id":38,"post_id":21,"tag_id":2},{"id":39,"post_id":21,"tag_id":3},{"id":40,"post_id":23,"tag_id":0},{"id":41,"post_id":23,"tag_id":1}]}}